pipeline {
    agent any
    // Install the Jenkins tools you need for your project / environment
    tools {
        nodejs 'nodeInstallationName' // Refers to a global tool configuration for nodejs called 'nodeInstallationName' 
    }

    stages {
        stage('Initialize & Cleanup Workspace') {
            steps {
               echo 'Initialize & Cleanup Workspace'
               sh 'ls -la'
               sh 'rm -rf *'
               sh 'rm -rf .git'
               sh 'rm -rf .gitignore'
               sh 'ls -la'
            }
        }

        stage('Git Clone') {
            steps {
                // Clone the repo that is going to be built
                git url: 'https://github.com/dani-kline/goof.git'
                sh 'ls -la'
            }
        }

        stage('Build') {
            steps {
                // Install dependencies and run the build. 
                // To run snyk-filter in Jenkins, it is necessary to use the Snyk CLI insted of the Jenkins Snyk plugin so we will install it here.
                // To run the Snyk CLI and snyk-filter, you would install the CLI, node-jq, and snyk-filter as shown below
                sh 'npm install -g snyk'
                sh 'npm install -g node-jq'
                sh 'npm install -g snyk-filter'
                sh 'npm install -g snyk-to-html'
                // browserify is a dependency for the project I'm building in this walkthrough. 
                sh 'npm install browserify'
                // this is the node command for starting the build
                sh 'npm run build'
            }
        }

        stage('Snyk Test using Snyk CLI') {
            // Run snyk test to check for vulnerabilities and fail the build if any are found
          steps {
            // Jenkins does not have a credential binding for Snyk Tokens. I added a new secret text credential with the Snyk API token as the secret.
            // The value of credentialsId is the ID of the secret text credential, and the variable value should be SNYK_TOKEN as it is below.
              // I plan on asking about the security of using this as an alternative to the token or hardcoding it as an environmental variable.
            withCredentials([string(credentialsId:'credentialId', variable: 'SNYK_TOKEN')]) {
              // Run a snyk test with snyk filter. The filter is included in the repo for this build and the path to it is specified.
                // Pipe the filtered results into snyk-to-html to generate a report
                // The build will not break even if the Snyk Test fails. Is this expected behavior?
              sh 'snyk test --json | snyk-filter -f snyk-filter/exploitable_cvss_9.yml --json | snyk-to-html -o results.html'
               }
            }
        }
    }
}
